<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from ecn_auv.xacro                  | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- STL-version of the URDF, used with gazebo for dynamic simulation  -->
<robot name="ecn_auv" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Body properties -->
  <!-- thrusters -->
  <!-- Thruster link -->
  <!-- Plugin list -->
  <gazebo>
    <!-- Gazebo plugin listens to the body-->
    <plugin filename="libfreefloating_gazebo_control.so" name="freefloating_gazebo_control">
      <switchService>switch</switchService>
      <updateRate>100</updateRate>
      <link>base_link</link>
      <!-- for each thruster, give the map to XYZ+RPY and the maximum effort -->
      <thruster>
        <map>-1 0 0 0 0 0.5</map>
        <effort>30</effort>
      </thruster>
      <thruster>
        <map>-1 0 0 0 0 -0.5</map>
        <effort>30</effort>
      </thruster>
      <thruster>
        <map>0 1 0 0 0 0</map>
        <effort>30</effort>
      </thruster>
      <thruster>
        <map>0 0 -1 0 -0.45 0</map>
        <effort>30</effort>
      </thruster>
      <thruster>
        <map>0 0 -1 0 0.45 0</map>
        <effort>30</effort>
      </thruster>
    </plugin>
  </gazebo>
  <link name="base_link">
    <visual>
      <origin rpy="0 -1.57079632679 0"/>
      <geometry>
        <cylinder length="1.5" radius="0.13"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 -1.57079632679 0" xyz="0 0 -0.065"/>
      <mass value="25"/>
      <inertia ixx="4.793125" ixy="0.0" ixz="0.0" iyy="4.793125" iyz="0.0" izz="0.21125"/>
    </inertial>
    <buoyancy>
      <compensation>1.01</compensation>
      <origin xyz="0 0 0"/>
      <limit radius="0.13"/>
      <damping rpy="20 50 50" xyz="60 100 100"/>
    </buoyancy>
    <!--gazebo reference="fwd_left">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.2</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>          
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>fwd_left</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo-->
  </link>
  <gazebo reference="base_link">
    <sensor name="sonar" type="ray">
      <visualize>true</visualize>
      <pose>0.75 0 0 0 1.570796 0</pose>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>290</samples>
            <resolution>1</resolution>
            <min_angle>-0.7</min_angle>
            <max_angle>0.7</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>.2</min>
          <max>50</max>
          <resolution>0.0005</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="sonar_controller">
        <topicName>sonar</topicName>
        <frameName>base_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="fwd_left" type="fixed">
    <parent link="base_link"/>
    <child link="fwd_left"/>
    <origin rpy="0 1.57079632679 0" xyz="-0.5 0.18 0"/>
    <dynamics damping="10.0"/>
    <axis xyz="0 1 0"/>
    <limit effort="30" lower="-1.57079632679" upper="1.57079632679" velocity="5.0"/>
  </joint>
  <link name="fwd_left">
    <buoyancy>
      <compensation>1.0</compensation>
    </buoyancy>
    <visual name="fwd_left_1">
      <geometry>
        <cylinder length="0.1" radius="0.02"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <visual name="fwd_left_2">
      <origin xyz="0 0 -0.065"/>
      <geometry>
        <cylinder length="0.03" radius="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <inertial>
      <mass value=".1"/>
      <inertia ixx=".1" ixy="0.0" ixz="0.0" iyy=".1" iyz="0.0" izz=".1"/>
    </inertial>
  </link>
  <gazebo reference="fwd_left">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="fwd_right" type="fixed">
    <parent link="base_link"/>
    <child link="fwd_right"/>
    <origin rpy="0 1.57079632679 0" xyz="-0.5 -0.18 0"/>
    <dynamics damping="10.0"/>
    <axis xyz="0 1 0"/>
    <limit effort="30" lower="-1.57079632679" upper="1.57079632679" velocity="5.0"/>
  </joint>
  <link name="fwd_right">
    <buoyancy>
      <compensation>1.0</compensation>
    </buoyancy>
    <visual name="fwd_right_1">
      <geometry>
        <cylinder length="0.1" radius="0.02"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <visual name="fwd_right_2">
      <origin xyz="0 0 -0.065"/>
      <geometry>
        <cylinder length="0.03" radius="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <inertial>
      <mass value=".1"/>
      <inertia ixx=".1" ixy="0.0" ixz="0.0" iyy=".1" iyz="0.0" izz=".1"/>
    </inertial>
  </link>
  <gazebo reference="fwd_right">
    <material>Gazebo/Black</material>
  </gazebo>
</robot>

